{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\qasim\\\\qasim-parry\\\\src\\\\charts\\\\D3_Qasim.js\";\nimport * as d3 from 'd3';\nimport React, { useRef, useEffect } from 'react';\n\nfunction BarChart({\n  width,\n  height,\n  data\n}) {\n  const ref = useRef();\n  useEffect(() => {\n    const svg = d3.select(ref.current).attr(\"width\", width).attr(\"height\", height).style(\"border\", \"1px solid black\");\n  }, []);\n  useEffect(() => {\n    draw();\n  }, [data]);\n\n  const draw = () => {\n    const svg = d3.select(ref.current);\n    var selection = svg.selectAll(\"rect\").data(data);\n    var yScale = d3.scaleLinear().domain([0, d3.max(data)]).range([0, height - 100]);\n    selection.transition().duration(300).attr(\"height\", d => yScale(d)).attr(\"y\", d => height - yScale(d));\n    selection.enter().append(\"rect\").attr(\"x\", (d, i) => i * 45).attr(\"y\", d => height).attr(\"width\", 40).attr(\"height\", 0).attr(\"fill\", \"orange\").transition().duration(300).attr(\"height\", d => yScale(d)).attr(\"y\", d => height - yScale(d));\n    selection.exit().transition().duration(300).attr(\"y\", d => height).attr(\"height\", 0).remove();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default D3_Qasim;","map":{"version":3,"sources":["E:/react/qasim/qasim-parry/src/charts/D3_Qasim.js"],"names":["d3","React","useRef","useEffect","BarChart","width","height","data","ref","svg","select","current","attr","style","draw","selection","selectAll","yScale","scaleLinear","domain","max","range","transition","duration","d","enter","append","i","exit","remove","D3_Qasim"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA;AAAjB,CAAlB,EAA0C;AACtC,QAAMC,GAAG,GAAGN,MAAM,EAAlB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,GAAG,GAAGT,EAAE,CAACU,MAAH,CAAUF,GAAG,CAACG,OAAd,EACPC,IADO,CACF,OADE,EACOP,KADP,EAEPO,IAFO,CAEF,QAFE,EAEQN,MAFR,EAGPO,KAHO,CAGD,QAHC,EAGS,iBAHT,CAAZ;AAIH,GALQ,EAKN,EALM,CAAT;AAOAV,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,IAAI;AACP,GAFQ,EAEN,CAACP,IAAD,CAFM,CAAT;;AAIA,QAAMO,IAAI,GAAG,MAAM;AAEf,UAAML,GAAG,GAAGT,EAAE,CAACU,MAAH,CAAUF,GAAG,CAACG,OAAd,CAAZ;AACA,QAAII,SAAS,GAAGN,GAAG,CAACO,SAAJ,CAAc,MAAd,EAAsBT,IAAtB,CAA2BA,IAA3B,CAAhB;AACA,QAAIU,MAAM,GAAGjB,EAAE,CAACkB,WAAH,GACQC,MADR,CACe,CAAC,CAAD,EAAInB,EAAE,CAACoB,GAAH,CAAOb,IAAP,CAAJ,CADf,EAEQc,KAFR,CAEc,CAAC,CAAD,EAAIf,MAAM,GAAC,GAAX,CAFd,CAAb;AAIAS,IAAAA,SAAS,CACJO,UADL,GACkBC,QADlB,CAC2B,GAD3B,EAESX,IAFT,CAEc,QAFd,EAEyBY,CAAD,IAAOP,MAAM,CAACO,CAAD,CAFrC,EAGSZ,IAHT,CAGc,GAHd,EAGoBY,CAAD,IAAOlB,MAAM,GAAGW,MAAM,CAACO,CAAD,CAHzC;AAKAT,IAAAA,SAAS,CACJU,KADL,GAEKC,MAFL,CAEY,MAFZ,EAGKd,IAHL,CAGU,GAHV,EAGe,CAACY,CAAD,EAAIG,CAAJ,KAAUA,CAAC,GAAG,EAH7B,EAIKf,IAJL,CAIU,GAJV,EAIgBY,CAAD,IAAOlB,MAJtB,EAKKM,IALL,CAKU,OALV,EAKmB,EALnB,EAMKA,IANL,CAMU,QANV,EAMoB,CANpB,EAOKA,IAPL,CAOU,MAPV,EAOkB,QAPlB,EAQKU,UARL,GAQkBC,QARlB,CAQ2B,GAR3B,EASSX,IATT,CASc,QATd,EASyBY,CAAD,IAAOP,MAAM,CAACO,CAAD,CATrC,EAUSZ,IAVT,CAUc,GAVd,EAUoBY,CAAD,IAAOlB,MAAM,GAAGW,MAAM,CAACO,CAAD,CAVzC;AAYAT,IAAAA,SAAS,CACJa,IADL,GAEKN,UAFL,GAEkBC,QAFlB,CAE2B,GAF3B,EAGSX,IAHT,CAGc,GAHd,EAGoBY,CAAD,IAAOlB,MAH1B,EAISM,IAJT,CAIc,QAJd,EAIwB,CAJxB,EAKKiB,MALL;AAMH,GA/BD;;AAkCA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAErB,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAQH;;AAED,eAAesB,QAAf","sourcesContent":["import * as d3 from 'd3';\r\nimport React, { useRef, useEffect } from 'react';\r\n\r\nfunction BarChart({ width, height, data }){\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        const svg = d3.select(ref.current)\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height)\r\n            .style(\"border\", \"1px solid black\")\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        draw();\r\n    }, [data]);\r\n\r\n    const draw = () => {\r\n        \r\n        const svg = d3.select(ref.current);\r\n        var selection = svg.selectAll(\"rect\").data(data);\r\n        var yScale = d3.scaleLinear()\r\n                            .domain([0, d3.max(data)])\r\n                            .range([0, height-100]);\r\n        \r\n        selection\r\n            .transition().duration(300)\r\n                .attr(\"height\", (d) => yScale(d))\r\n                .attr(\"y\", (d) => height - yScale(d))\r\n\r\n        selection\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"x\", (d, i) => i * 45)\r\n            .attr(\"y\", (d) => height)\r\n            .attr(\"width\", 40)\r\n            .attr(\"height\", 0)\r\n            .attr(\"fill\", \"orange\")\r\n            .transition().duration(300)\r\n                .attr(\"height\", (d) => yScale(d))\r\n                .attr(\"y\", (d) => height - yScale(d))\r\n        \r\n        selection\r\n            .exit()\r\n            .transition().duration(300)\r\n                .attr(\"y\", (d) => height)\r\n                .attr(\"height\", 0)\r\n            .remove()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            <svg ref={ref}>\r\n            </svg>\r\n        </div>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default D3_Qasim;"]},"metadata":{},"sourceType":"module"}