{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\qasim\\\\qasim-parry\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css'; // import BarChart from './BarChart'\n// import * as d3 from d3;\n\nimport { render } from '@testing-library/react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      d3React: new d3React()\n    };\n    this.getd3ReactState = this.getd3ReactState.bind(this);\n  }\n\n  getd3ReactState() {\n    // Using props and state, calculate the d3React state\n    return {\n      data: {\n        x: 0,\n        y: 0,\n        width: 42,\n        height: 17,\n        fill: 'red'\n      }\n    };\n  }\n\n  componentDidMount() {\n    var props = {\n      width: this._d3Div.clientWidth,\n      height: this._d3Div.clientHeight\n    };\n    var state = this.getd3ReactState();\n    this.state.d3React.create(this._d3Div, props, state);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    var state = this.getd3ReactState();\n    this.state.d3React.update(this._d3Div, state);\n  }\n\n  componentWillUnmount() {\n    this.state.d3React.destroy(this._d3Div);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, this.props.message), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d3Component\",\n      ref: component => {\n        this._d3Div = component;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nclass d3React {\n  constructor() {\n    this.create = this.create.bind(this);\n    this.update = this.update.bind(this);\n    this.destroy = this.destroy.bind(this);\n    this._drawComponent = this._drawComponent.bind(this);\n  }\n\n  create(element, props, state) {\n    console.log('d3React create');\n    var svg = d3.select(element).append('svg').attr('width', props.width).attr('height', props.height);\n    this.update(element, state);\n  }\n\n  update(element, state) {\n    console.log('d3React update');\n\n    this._drawComponent(element, state.data);\n  }\n\n  destroy(element) {\n    console.log('d3React destroy');\n  }\n\n  _drawComponent(element, data) {\n    // perform all drawing on the element here\n    var svg = d3.select(element).select('svg');\n    svg.append('rect').attr('x', data.x).attr('y', data.y).attr('width', data.width).attr('height', data.height).attr('fill', data.fill);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  message: \"Hello, D3.js and React!\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 17\n  }\n}), document.getElementById('app'));","map":{"version":3,"sources":["E:/react/qasim/qasim-parry/src/App.js"],"names":["React","Component","render","App","constructor","props","state","d3React","getd3ReactState","bind","data","x","y","width","height","fill","componentDidMount","_d3Div","clientWidth","clientHeight","create","componentDidUpdate","prevProps","prevState","update","componentWillUnmount","destroy","message","component","_drawComponent","element","console","log","svg","d3","select","append","attr","ReactDOM","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n// import BarChart from './BarChart'\n// import * as d3 from d3;\nimport { render } from '@testing-library/react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      d3React: new d3React()\n    };\n    this.getd3ReactState = this.getd3ReactState.bind(this);\n  }\n\n  getd3ReactState() {\n    // Using props and state, calculate the d3React state\n    return ({\n      data: {\n        x: 0,\n        y: 0,\n        width: 42,\n        height: 17,\n        fill: 'red'\n      }\n    });\n  }\n\n  componentDidMount() {\n    var props = {\n      width: this._d3Div.clientWidth,\n      height: this._d3Div.clientHeight\n    };\n    var state = this.getd3ReactState();\n    this.state.d3React.create(this._d3Div, props, state);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    var state = this.getd3ReactState();\n    this.state.d3React.update(this._d3Div, state);\n  }\n\n  componentWillUnmount() {\n    this.state.d3React.destroy(this._d3Div);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>{this.props.message}</h1>\n        <div className=\"d3Component\" ref={(component) => { this._d3Div = component; } } />\n      </div>\n    );\n  }\n}\n\nclass d3React {\n  constructor() {\n    this.create = this.create.bind(this);\n    this.update = this.update.bind(this);\n    this.destroy  = this.destroy.bind(this);\n    this._drawComponent = this._drawComponent.bind(this);\n  }\n\n  create(element, props, state) {\n    console.log('d3React create');\n    var svg = d3.select(element).append('svg')\n      .attr('width', props.width)\n      .attr('height', props.height);\n\n    this.update(element, state);\n  }\n\n  update(element, state) {\n    console.log('d3React update');\n    this._drawComponent(element, state.data);\n  }\n\n  destroy(element) {\n    console.log('d3React destroy');\n  }\n\n  _drawComponent(element, data) {\n    // perform all drawing on the element here\n    var svg = d3.select(element).select('svg');\n\n    svg.append('rect')\n      .attr('x', data.x)\n      .attr('y', data.y)\n      .attr('width', data.width)\n      .attr('height', data.height)\n      .attr('fill', data.fill);\n  }\n}\n\nReactDOM.render(<App message=\"Hello, D3.js and React!\"/>, document.getElementById('app'));\n"]},"metadata":{},"sourceType":"module"}